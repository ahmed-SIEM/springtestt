name: CI/CD - Spring Boot

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-test-sonar-docker:
    runs-on: self-hosted

    steps:
      - name: Cloner le code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Ajouter Maven au PATH
        run: echo "/usr/bin" >> $GITHUB_PATH

      - name: Installer Java 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Compiler & Générer JaCoCo
        run: mvn clean verify

      - name: Vérifier accès SonarQube
        run: |
          curl -f http://sonarqube.192.168.224.163.nip.io:9000 || echo "⚠️ SonarQube unreachable"

      - name: Analyse SonarQube
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn sonar:sonar \
            -Dsonar.projectKey=ahmed-springtestt \
            -Dsonar.host.url=http://sonarqube.192.168.224.163.nip.io:9000 \
            -Dsonar.login=$SONAR_TOKEN \
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Construire et pousser l’image Docker
        run: |
          docker buildx build \
            --platform linux/amd64 \
            -t ahmedsouid1/springback:latest \
            --push .

